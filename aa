10.12

一、 区块链广义：
（一）利用 链式数据结构 以 验证与存储数据、利用 分布式节点共识算法生成和更新数据、 利用 密码学方式 以 保证数据传输和访问安全、 利用 由自动化脚本代码组成的智能合约 以 编程和操作数据 的一种分布式基础架构与计算范式。
（去中心化分布式账本数据库）

特点：
（二）
1.节点越多越安全
2.防止篡改

二、 基本原理：
（一）去中心化（+奖励机制+共识机制）：
	原本少量的大中型逐渐演变为大量的小中心，每个中心都可以查询且不可更改
（二）对等式网络（P2P/点对点技术）：
	每个用户既是一个节点，也是一个服务器
	每个节点无法直接找到其他节点，只能依靠其他用户群交流信息
	优点：减少电接点-》减少丢失分险，高并发处理，便于维护，适用于小型网络，高性能（内存管理交换数据）
	缺点：假设复杂（服务器+客户端）；用在大规模网络管理复杂而紊乱
（三）哈希函数/ 哈希值：
	哈希函数：将任意长度的数据映射为固定长度的字符串的函数（加密用）
		对交易信息加密，压缩为素质和字母组成的散列字符串
			能唯一 精准 的标示区块

			***** 挖坑：暴力破解正确输入值（哈希值），最先找到的获取奖励

（四）权益证明（POS）（区别与传统的POW）

	以 共识算法 的方式， 用 伪随机数 的方式， 指定 持有货币的人 为交易的验证这，创造新的区块，连接在最长的链后面
	与持有货币和时间 成正比
		币龄：一个币一天一币龄 	发现一个POS区块，币龄就会清空为0，每清空365币龄即可**获取利息
		51%攻击：就是如果某个节点拥有超过全网51%的算力，将能够实现双重支付、撤销交易等操作，让比特币网络崩溃。
		共识算法：解决对某一提案（目标，投票等各种协作工作），大家达成一致意见的过程
			一个很重要的解决一致性算法的解决思路，即：将可能引发不一致的并行操作进行串行化，就是现在计算机系统里处理分布式一致性问题基础思路和唯一秘诀
			CAP原理：  任何分布式系统只可同时满足（快速响应，统一，）二点，没法三者兼顾。即数据一致，响应及时，可分区执行不可能同时满足。
			PBFT  一种高效拜占庭容错共识算法：  
			假如将军总数为 N，叛变将军数为 F，则当N>=3F+1 时，问题才有解，即叛变的将军不超过1/3时，存在有效的算法，如BFT，不论叛变者如何折腾，忠诚的将军们总能达成一致的结果。
			PBFT 在区块链上的实现：

			https://blog.csdn.net/shangsongwww/article/details/89021915

		优点：虚拟货币越多越能掌控；反过来说，要发动51%攻击需要的虚拟货币太多，价值太高以至于没有必要发动攻击，攻击后系统崩溃，发动者将是最大受损
		缺点：中心化趋势

（五）默克尔树（哈希树）（P2P下载可用）
	默克尔树是一种二叉树，由一组叶节点、一组中间节点和一个根节点构成
	无敌解释：https://blog.csdn.net/weixin_37504041/article/details/80474636

（六）椭圆曲线加密（ECC）
	1.椭圆曲线：y2=ax3+ bx2+cx+d（不一定。。。或者根本不是椭圆）
	2.定义椭圆曲线的运算规则
		加法：过曲线上的两点A、B画一条直线，找到直线与椭圆曲线的交点，交点关于x轴对称位置的点，定义为A+B，即为加法。如下图所示：A + B = C
		二倍运算：上述方法无法解释A + A，即两点重合的情况。因此在这种情况下，将椭圆曲线在A点的切线，与椭圆曲线的交点，交点关于x轴对称位置的点，定义为A + A，即2A，即为二倍运算。
		正负取反：将A关于x轴对称位置的点定义为-A，即椭圆曲线的正负取反运算。
		无穷远点：如果将A与-A相加，过A与-A的直线平行于y轴，可以认为直线与椭圆曲线相交于无穷远点
		综上，定义了A+B、2A运算，因此给定椭圆曲线的某一点G，可以求出2G、3G（即G + 2G）、4G......。即：当给定G点时，已知x，求xG点并不困难。反之，已知xG点，求x则非常困难。此即为椭圆曲线加密算法背后的数学原理。

	3.运算原理：
	椭圆曲线上的已知G和xG求x，是非常困难的，此即为椭圆曲线上的的离散对数问题。此处x即为私钥，xG即为公钥。
	椭圆曲线加密算法原理如下：
	设私钥、公钥分别为k、K，即K = kG，其中G为G点。
	公钥加密：　　选择随机数r，将消息M生成密文C，该密文是一个点对，即：　　C = {rG, M+rK}，其中K为公钥
	私钥解密：　　M + rK - k(rG) = M + r(kG) - k(rG) = M　　其中k、K分别为私钥、公钥。

	**** 椭圆曲线加密：https://www.jianshu.com/p/e41bc1eb1d81
	私钥和公钥（非对称加密算法）：https://baike.baidu.com/item/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/1208652?fr=aladdin
	有限域：https://baike.baidu.com/item/%E6%9C%89%E9%99%90%E5%9F%9F/4273049?fr=aladdin
	因数与约数的区别
	https://zhidao.baidu.com/question/47807348.html
